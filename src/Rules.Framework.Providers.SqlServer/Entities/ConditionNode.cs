// <auto-generated>
// ReSharper disable All

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Rules.Framework.SqlServer.Models
{
    // ****************************************************************************************************
    // This is not a commercial licence, therefore only a few tables/views/stored procedures are generated.
    // ****************************************************************************************************

    // ConditionNodes
    public class ConditionNode
    {
        public long Id { get; set; } // Id (Primary key)
        public int ConditionNodeTypeCode { get; set; } // ConditionNodeTypeCode
        public int ConditionTypeCode { get; set; } // ConditionTypeCode
        public int DataTypeCode { get; set; } // DataTypeCode
        public int OperatorCode { get; set; } // OperatorCode
        public string Operand { get; set; } // Operand (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child ConditionNodeRelations where [ConditionNodeRelations].[ChildId] point to this entity (FK_ChildConditionNodeRelations_ConditionNodes)
        /// </summary>
        public virtual ICollection<ConditionNodeRelation> ConditionNodeRelations_ChildId { get; set; } // ConditionNodeRelations.FK_ChildConditionNodeRelations_ConditionNodes

        /// <summary>
        /// Child ConditionNodeRelations where [ConditionNodeRelations].[OwnerId] point to this entity (FK_OwnerConditionNodeRelations_ConditionNodes)
        /// </summary>
        public virtual ICollection<ConditionNodeRelation> ConditionNodeRelations_OwnerId { get; set; } // ConditionNodeRelations.FK_OwnerConditionNodeRelations_ConditionNodes

        /// <summary>
        /// Child Rules where [Rules].[ConditionNodeId] point to this entity (FK_Rules_ConditionNodes)
        /// </summary>
        public virtual ICollection<Rule> Rules { get; set; } // Rules.FK_Rules_ConditionNodes

        // Foreign keys

        /// <summary>
        /// Parent ConditionNodeType pointed by [ConditionNodes].([ConditionNodeTypeCode]) (FK_ConditionNodes_ConditionNodeTypes)
        /// </summary>
        public virtual ConditionNodeType ConditionNodeType { get; set; } // FK_ConditionNodes_ConditionNodeTypes

        /// <summary>
        /// Parent ConditionType pointed by [ConditionNodes].([ConditionTypeCode]) (FK_ConditionNodes_ConditionTypes)
        /// </summary>
        public virtual ConditionType ConditionType { get; set; } // FK_ConditionNodes_ConditionTypes

        /// <summary>
        /// Parent DataType pointed by [ConditionNodes].([DataTypeCode]) (FK_ConditionNodes_DataTypes)
        /// </summary>
        public virtual DataType DataType { get; set; } // FK_ConditionNodes_DataTypes

        /// <summary>
        /// Parent Operator pointed by [ConditionNodes].([OperatorCode]) (FK_ConditionNodes_Operators)
        /// </summary>
        public virtual Operator Operator { get; set; } // FK_ConditionNodes_Operators

        public ConditionNode()
        {
            ConditionNodeRelations_ChildId = new List<ConditionNodeRelation>();
            ConditionNodeRelations_OwnerId = new List<ConditionNodeRelation>();
            Rules = new List<Rule>();
        }
    }

}
// </auto-generated>
