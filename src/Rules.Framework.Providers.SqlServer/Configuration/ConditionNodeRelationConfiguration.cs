// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Rules.Framework.SqlServer.Models
{
    // ConditionNodeRelations
    public class ConditionNodeRelationConfiguration : IEntityTypeConfiguration<ConditionNodeRelation>
    {
        public void Configure(EntityTypeBuilder<ConditionNodeRelation> builder)
        {
            builder.ToTable("ConditionNodeRelations", "dbo");
            builder.HasKey(x => new { x.OwnerId, x.ChildId }).HasName("PK_ConditionNodeRelations").IsClustered();

            builder.Property(x => x.OwnerId).HasColumnName(@"OwnerId").HasColumnType("bigint").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.ChildId).HasColumnName(@"ChildId").HasColumnType("bigint").IsRequired().ValueGeneratedNever();

            // Foreign keys
            builder.HasOne(a => a.Child).WithMany(b => b.ConditionNodeRelations_ChildId).HasForeignKey(c => c.ChildId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ChildConditionNodeRelations_ConditionNodes");
            builder.HasOne(a => a.Owner).WithMany(b => b.ConditionNodeRelations_OwnerId).HasForeignKey(c => c.OwnerId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_OwnerConditionNodeRelations_ConditionNodes");
        }
    }

}
// </auto-generated>
