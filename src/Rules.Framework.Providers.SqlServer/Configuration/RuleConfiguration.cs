// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Rules.Framework.SqlServer.Models
{
    // Rules
    public class RuleConfiguration : IEntityTypeConfiguration<Rule>
    {
        public void Configure(EntityTypeBuilder<Rule> builder)
        {
            builder.ToTable("Rules", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_Rules").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.Content).HasColumnName(@"Content").HasColumnType("nvarchar(100)").IsRequired().HasMaxLength(100);
            builder.Property(x => x.ContentTypeCode).HasColumnName(@"ContentTypeCode").HasColumnType("int").IsRequired();
            builder.Property(x => x.DateBegin).HasColumnName(@"DateBegin").HasColumnType("datetime2").IsRequired();
            builder.Property(x => x.DateEnd).HasColumnName(@"DateEnd").HasColumnType("datetime2").IsRequired(false);
            builder.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar(250)").IsRequired().HasMaxLength(250);
            builder.Property(x => x.Priority).HasColumnName(@"Priority").HasColumnType("int").IsRequired();
            builder.Property(x => x.ConditionNodeId).HasColumnName(@"ConditionNodeId").HasColumnType("bigint").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.ConditionNode).WithMany(b => b.Rules).HasForeignKey(c => c.ConditionNodeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Rules_ConditionNodes");
            builder.HasOne(a => a.ContentType).WithMany(b => b.Rules).HasForeignKey(c => c.ContentTypeCode).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Rules_ContentTypes");
        }
    }

}
// </auto-generated>
